classDiagram
    class Agent {
        +str id
        +dict personality_traits
        +dict relationships
        +List[Interaction] interaction_history
        +__init__(id: str)
        +interact_with(other: Agent) bool
        +update_relationship(other: Agent, score: float)
        +get_relationship(other: Agent) float
    }

    class PersonalityGenerator {
        +LLMClient llm_client
        +__init__(llm_client: LLMClient)
        +generate_traits() dict
        +generate_preferences() dict
    }

    class Interaction {
        +str interaction_id
        +Agent agent_a
        +Agent agent_b
        +float result_score
        +datetime timestamp
        +__init__(agent_a: Agent, agent_b: Agent)
        +calculate_outcome() float
    }

    class SocialNetwork {
        +List[Agent] agents
        +NetworkGraph graph
        +__init__(num_agents: int)
        +add_agent(agent: Agent)
        +remove_agent(agent: Agent)
        +update_edge(agent_a: Agent, agent_b: Agent, weight: float)
        +get_network_stats() dict
    }

    class NetworkAnalyzer {
        +SocialNetwork network
        +__init__(network: SocialNetwork)
        +analyze_triadic_closure() float
        +find_communities() List
        +calculate_centrality() dict
    }

    class Simulation {
        +SocialNetwork network
        +NetworkAnalyzer analyzer
        +Database db
        +Config config
        +__init__(config: Config)
        +run(steps: int)
        +save_results()
        +visualize_network()
    }

    class LLMClient {
        +str api_key
        +str model_name
        +__init__(api_key: str, model_name: str)
        +generate_response(prompt: str) str
        +analyze_interaction(context: dict) dict
    }

    class Database {
        +str db_path
        +__init__(db_path: str)
        +save_interaction(interaction: Interaction)
        +save_network_state(network: SocialNetwork)
        +query_interactions(filters: dict) List
    }

    Simulation --> SocialNetwork
    Simulation --> NetworkAnalyzer
    Simulation --> Database
    SocialNetwork --> Agent
    Agent --> Interaction
    Agent ..> PersonalityGenerator
    PersonalityGenerator --> LLMClient
    NetworkAnalyzer --> SocialNetwork